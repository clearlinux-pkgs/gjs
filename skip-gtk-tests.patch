Some tests expect that GTK can be initialised, which implies a working X or Wayland session.

Instead of failing if these are not present, simply skip the test.

https://gitlab.gnome.org/GNOME/gjs/-/merge_requests/421

From 67c6a7eb11739633149fd573390eec556114f4b9 Mon Sep 17 00:00:00 2001
From: Ross Burton <ross.burton@intel.com>
Date: Mon, 20 Apr 2020 16:40:02 +0100
Subject: [PATCH] testcairo

---
 installed-tests/js/testCairo.js                    | 8 ++++----
 installed-tests/js/testGObjectDestructionAccess.js | 3 ++-
 installed-tests/js/testGtk.js                      | 3 ++-
 installed-tests/js/testIntrospection.js            | 6 ++++--
 installed-tests/js/testLegacyGtk.js                | 3 ++-
 installed-tests/scripts/testCommandLine.sh         | 4 +++-
 6 files changed, 17 insertions(+), 10 deletions(-)

diff --git a/installed-tests/js/testCairo.js b/installed-tests/js/testCairo.js
index 08686960..cb76716a 100644
--- a/installed-tests/js/testCairo.js
+++ b/installed-tests/js/testCairo.js
@@ -9,10 +9,6 @@ function _ts(obj) {
 }
 
 describe('Cairo', function () {
-    beforeAll(function () {
-        Gtk.init(null);
-    });
-
     let cr, surface;
     beforeEach(function () {
         surface = new Cairo.ImageSurface(Cairo.Format.ARGB32, 10, 10);
@@ -166,6 +162,10 @@ describe('Cairo', function () {
         });
 
         it('has methods when created from a C function', function () {
+            if (!Gtk.init_check(null)[0]) {
+                pending("Cannot initialise GTK");
+                return;
+            }
             let win = new Gtk.OffscreenWindow();
             let da = new Gtk.DrawingArea();
             win.add(da);
diff --git a/installed-tests/js/testGObjectDestructionAccess.js b/installed-tests/js/testGObjectDestructionAccess.js
index 12079b95..1f746269 100644
--- a/installed-tests/js/testGObjectDestructionAccess.js
+++ b/installed-tests/js/testGObjectDestructionAccess.js
@@ -8,7 +8,8 @@ describe('Access to destroyed GObject', function () {
     let destroyedWindow;
 
     beforeAll(function () {
-        Gtk.init(null);
+        if (!Gtk.init_check(null)[0])
+          pending("Cannot initialise GTK");
     });
 
     beforeEach(function () {
diff --git a/installed-tests/js/testGtk.js b/installed-tests/js/testGtk.js
index 667aa50f..16600b1b 100644
--- a/installed-tests/js/testGtk.js
+++ b/installed-tests/js/testGtk.js
@@ -137,7 +137,8 @@ function validateTemplate(description, ClassName, pending = false) {
 
 describe('Gtk overrides', function () {
     beforeAll(function () {
-        Gtk.init(null);
+        if (!Gtk.init_check(null)[0])
+          pending("Cannot initialise GTK");
     });
 
     afterAll(function () {
diff --git a/installed-tests/js/testIntrospection.js b/installed-tests/js/testIntrospection.js
index f81751b0..bd3ac2f8 100644
--- a/installed-tests/js/testIntrospection.js
+++ b/installed-tests/js/testIntrospection.js
@@ -31,7 +31,8 @@ describe('Unsafe integer marshalling', function () {
 describe('Marshalling empty flat arrays of structs', function () {
     let widget;
     beforeAll(function () {
-        Gtk.init(null);
+        if (!Gtk.init_check(null)[0])
+          pending("Cannot initialise GTK");
     });
 
     beforeEach(function () {
@@ -73,7 +74,8 @@ describe('GError domains', function () {
 describe('Object properties on GtkBuilder-constructed objects', function () {
     let o1;
     beforeAll(function () {
-        Gtk.init(null);
+        if (!Gtk.init_check(null)[0])
+          pending("Cannot initialise GTK");
     });
 
     beforeEach(function () {
diff --git a/installed-tests/js/testLegacyGtk.js b/installed-tests/js/testLegacyGtk.js
index b1dbe72e..53e7ac35 100644
--- a/installed-tests/js/testLegacyGtk.js
+++ b/installed-tests/js/testLegacyGtk.js
@@ -100,7 +100,8 @@ function validateTemplate(description, ClassName) {
 
 describe('Legacy Gtk overrides', function () {
     beforeAll(function () {
-        Gtk.init(null);
+        if (!Gtk.init_check(null)[0])
+          pending("Cannot initialise GTK");
     });
 
     validateTemplate('UI template', MyComplexGtkSubclass);
diff --git a/installed-tests/scripts/testCommandLine.sh b/installed-tests/scripts/testCommandLine.sh
index b77d66f4..cca6f9fc 100755
--- a/installed-tests/scripts/testCommandLine.sh
+++ b/installed-tests/scripts/testCommandLine.sh
@@ -63,6 +63,8 @@ report () {
     total=$((total + 1))
     if test $exit_code -eq 0; then
         echo "ok $total - $1"
+    elif test $exit_code -eq 77; then
+        echo "ok $total - $1 # SKIP"
     else
         echo "not ok $total - $1"
     fi
@@ -234,7 +236,7 @@ if test -n "$ENABLE_GTK"; then
     $gjs -c 'imports.gi.versions.Gtk = "3.0";
              const Gtk = imports.gi.Gtk;
              const GObject = imports.gi.GObject;
-             Gtk.init(null);
+             if (!Gtk.init_check(null)[0]) imports.system.exit(77);
              let BadWidget = GObject.registerClass(class BadWidget extends Gtk.Widget {
                 vfunc_destroy() {};
              });
-- 
2.26.1

